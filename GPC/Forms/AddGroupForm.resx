<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kP8A0ZT/ANGU/wDNkP8Atnn/AJFS/wB0P7QAAAAtAAAADgAAAAEAAAAMAAAAKnQ6CoqWSQnRpVEJ/6VQ
        CP+lUAj/pVAI/6VQCP+lUAj/pVAI/6VQCP+lUAj/pVAI/6VQCP+mUQn/mUgI0HUwBIYAc0CvAJdX/wDL
        j/8AzY//AMmK/wDGhf8AxoX/AMmK/wDNj/8Ay4//AJZW/wB2QLEAAAAgAAAABgAAABSPSxCjrlsV/82H
        R//amVz/4qNm/+GiZf/homX/4aJl/+GiZf/homX/4aJl/+GiZf/homX/4qNm/9uZXP/Whkb/j2Ug/wCV
        Vf8AyY3/AMqM/wDHiP8Aw4D///////////8Aw4D/AMeI/wDKjP8AyY3/AJJR/wBNKl0AAAAPAAAAFrFf
        GP/coGj/4aVp/96cXP/cmVj/3JlY/9yZWP/cmVf/3JhW/9yYVv/cmVf/3JlY/9yZWP/cmVj/4Jxc//Ck
        af8+llj/ALR1/wDIiv8AxYb/AMOD/wC+ef///////////wC+ef8Aw4P/AMWG/wDIiv8As3T/AIBFzQAA
        ABUAAAAWuGgh/+i5jP/iomD/4aJh/+GiYv/homL/4aJh/+GgX//hn1z/4Z9c/+GgX//homH/4aJi/+Gi
        Yv/komL/96Nj/wCIR/8AxYb/AMOD/wC+fP8AvHf/ALhv////////////ALhv/wC8d/8Avnz/AMOD/wDF
        h/8Aikr/AAAAFgAAABbHgD//6sKd/+aqaf/mq2v/5qts/+arbP/mqWn/5qZi/+zaxv/q2MP/5qZj/+aq
        af/mq2z/5qts/+qrbP/+rW7/AIZG/xfMlf8AvXr/////////////////////////////////////////
        //8AvXr/G82W/wCJSf8AAAAWAAAAFsuGRv/uza7/6rJz/+qzdf/qs3b/6rJ0/+qvbv/uzqr/8Pb7/+vx
        9f/oyKT/6rBv/+qydP/qs3b/7rN2//+2ef8AhUP/NdKh/wC7dv//////////////////////////////
        /////////////wC7d/8506L/AIlI/wAAABUAAAAT0I9R//LZw//wunv/77t+/++7fv/vuXr/8seX//f8
        ///x8vL/7e7s/+br7f/tw5L/8Lp7/++8fv/yvH///7+B/wCDP/9p2rf/ALt4/wC5dP8At3H/ALJo////
        ////////ALJo/wC3cf8AuXT/ALt4/27cuf8AiUf/AAAADwAAAAnNhT7/9eHP//Tau//0w4j/9cGC//bI
        jv/+/v7//fz5//r28v/28u3/8O7q/+fm4//2xo3/9sKD//bEif//3L//PKNv/1jEnP8pyJT/ALp4/wC5
        eP8AtG7///////////8AtG7/ALl4/wC6eP8qyJX/Y8eg/wCFRsQAAAAGAAAAAr99OmPYmVv/8t3K//nu
        4//527b///z0/8vj8v+VwNf/g7LJ/3ipwf93o7v/pL/L/+jg1P/83rn//O7j///dyv+zmVr/AJFS/4vi
        xf8dxIv/ALd0/wCzbf///////////wCzbf8At3T/HcSL/43jxv8LlFf/AHM+PgAAAAEAAAAAAAAAAcWD
        QU3Ui0H44q15//Teyv//////crTX/26syv9gmLb/UIak/z94lv8gW33/6uvr//rZvv/urXb/04xD/3Oa
        Z/8KkVj/Dphb/5XjyP9c1Kv/C7x+/wCwaP8AsGj/C7x//1zUq/+W48j/Eppd/wCBRJ4AAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAALRjUdf3ZFD4fKhVP95utz/aJ63/1iIoP9KeZL/O2mC/yNWdf/+qFv/1JpT/3ae
        Z/8ypX3/PKZ+/0Smfv8SlFr/AI9N/1bAlv+R4MT/nOfN/53nzv+T4cX/WsKZ/wKSUP8Thlr/AAAAFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAgVG9/0H6xy/93t9j/crLT/26qzv9kocT/O3CP/2qQ
        k/91zaz/Nqp+/z6rgP9Bq4D/QKp//zqne/+DxKb/L6Bt/wCBOf8Agz7/AIQ//wCEP/8HkFP/Y7yW/zaF
        dv8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAEhMrPEpSk7z/hsns/3693v93tdb/cK7P/2uo
        yf9koMT/SIOr/4fOtv88sYD/QLGC/0Cwg/85rn7/dcWj///7/v//9Pf/dcKh/z6xgv9Fsob/RLKG/z6w
        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
</value>
  </data>
</root>